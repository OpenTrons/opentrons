name: "Build CI Container"
description: "Builds and publishes the CI container"
inputs:
  git_ref:
    description: "The Git Ref to build the container for"
    required: true
  token:
    description: "A Github Token (must have write:packages scope)"
    required: true

runs:
  using: "composite"
  steps:
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.token }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        install: true
        driver-opts: network=host

    - name: Cache Docker Buildx Layers
      id: cache
      uses: actions/cache@v4
      with:
        path: |
          node
          python
        key: cache-${{ inputs.git_ref }}
        restore-keys: buildx-edge

    - name: inject cache into docker
      uses: reproducible-containers/buildkit-cache-dance@v3.1.2
      with:
        cache-map: |
          {
            "node": "/root/.cache/yarn",
            "python": "/root/.cache/pip"
          }
        skip-extraction: ${{ steps.cache.outputs.cache-hit }}

    # Checkout already happened so that we may use this action.
    # Make sure we're on the right ref In case it was a tag.
    # So that we are using the Dockerfile on that inputs.git_ref
    - name: 'Fix actions/checkout odd handling of tags'
      if: startsWith(inputs.git_ref, 'refs/tags')
      shell: bash
      run: |
        git fetch -f origin ${{ inputs.git_ref }}:${{ inputs.git_ref }}
        git checkout ${{ inputs.git_ref }}

    - name: Build and push with cache
      id: build
      uses: docker/build-push-action@v6
      with:
        context: ci-docker
        build-args: |
          GIT_REF=${{ inputs.git_ref }}
        target: ci
        push: true
        tags: ghcr.io/opentrons/opentrons-ci:${{ inputs.git_ref }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        secrets: GIT_AUTH_TOKEN=${{ inputs.token }}
