# Run tests, build components bundle, and deploy it to sandbox

name: 'Components test, build, and deploy'

on:
  pull_request:
    paths:
      - 'Makefile'
      - 'components/**'
      - 'app/**/*.stories.*'
      - 'app/src/atoms/**/*'
      - 'app/src/molecules/**/*'
      - 'package.json'
      - '.github/workflows/components-test-build-deploy.yaml'
  push:
    paths:
      - 'components/**'
      - 'app/**/*.stories.*'
      - 'app/src/atoms/**/*'
      - 'app/src/molecules/**/*'
      - 'package.json'
      - '.github/workflows/components-test-build-deploy.yaml'
    branches:
      - '**'
    tags:
      - 'components*'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-${{ github.ref_name != 'edge' || github.run_id}}-${{ github.ref_type != 'tag' || github.run_id }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  CI: true

jobs:
  determine-build-type:
    runs-on: 'ubuntu-latest'
    name: 'Determine build type'
    outputs:
      type: ${{steps.determine-build-type.outputs.type}}
    steps:
      - id: determine-build-type
        run: |
          echo "Determining build type for event ${{github.event_name}} and ref ${{github.ref}}"
          if [ "${{ format('{0}', github.event_name == 'pull_request') }}" = "true" ] ; then
            echo "No builds for pull requests"
            echo 'type=none' >> $GITHUB_OUTPUT
          elif [ "${{ format('{0}', startsWith(github.ref, 'refs/heads/')) }}" = "true" ] ; then
            echo "storybook s3 builds for branch ${{ github.ref_name }}"
            echo 'type=storybook' >> $GITHUB_OUTPUT
          elif [ "${{ format('{0}', startsWith(github.ref, 'refs/tags/components')) }}" = "true" ] ; then
            echo "publish builds for components tags"
            echo 'type=publish' >> $GITHUB_OUTPUT
          else
            echo "No build for ref ${{github.ref}} and event ${{github.event_name}}"
            echo 'type=none' >> $GITHUB_OUTPUT
          fi

  publish-components:
    name: 'publish components package to npm'
    runs-on: 'ubuntu-latest'
    needs: ['determine-build-type']
    if: needs.determine-build-type.outputs.type == 'publish'
    steps:
      - uses: 'actions/checkout@v3'
      # https://github.com/actions/checkout/issues/290
      - name: 'Fix actions/checkout odd handling of tags'
        if: startsWith(github.ref, 'refs/tags')
        run: |
          git fetch -f origin ${{ github.ref }}:${{ github.ref }}
          git checkout ${{ github.ref }}
      - uses: 'actions/setup-node@v3'
        with:
          node-version: '18.19.0'
          registry-url: 'https://registry.npmjs.org'
      - name: 'install udev for usb-detection'
        run: |
          # WORKAROUND: Remove microsoft debian repo due to https://github.com/microsoft/linux-package-repositories/issues/130. Remove line below after it is resolved
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt-get update && sudo apt-get install libudev-dev
      - name: 'setup-js'
        run: |
          npm config set cache ./.npm-cache
          yarn config set cache-folder ./.yarn-cache
          make setup-js
      # replace package.json stub version number with version from tag
      - name: 'set version number'
        run: |
          npm install -g json
          VERSION_STRING=$(echo ${{ github.ref }} | sed 's/refs\/tags\/components@//')
          json -I -f ./components/package.json -e "this.version=\"$VERSION_STRING\""
          json -I -f ./components/package.json -e "this.dependencies['@opentrons/shared-data']=\"$VERSION_STRING\""
      - uses: 'actions/setup-node@v3'
        with:
          node-version: '18.19.0'
          registry-url: 'https://registry.npmjs.org'
      - name: 'publish to npm registry'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd ./components
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ./.npmrc
          ls -R # Debug: View contents of ./components
          npm publish --access public
