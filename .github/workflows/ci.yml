name: continuous integration
on: [push, pull_request]

env:
  CI: true

jobs:
  test-py-libs:
    name: Run Python library tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15, windows-2019]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      # use npm rather than yarn so npx will pick it up
      - run: npm install --global shx@0.2.2
      - run: make setup-py-libs
      - run: make test-py-libs
      - uses: codecov/codecov-action@v1

  test-py-apps:
    name: Run Python application tests and Python checks
    needs: [test-py-libs]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - run: sudo apt-get install -y --no-install-recommends libsystemd-dev
      # use npm rather than yarn so npx will pick it up
      - run: npm install --global shx@0.2.2
      - run: make setup-py
      - run: make test-py-apps
      - run: make lint-py
      - uses: codecov/codecov-action@v1

  docs-py:
    name: Build Python Protocol API docs
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - run: sudo apt-get install -y --no-install-recommends libsystemd-dev texlive-fonts-recommended texlive-latex-extra texlive-fonts-extra dvipng texlive-latex-recommended latexmk texlive-lang-greek
      # use npm rather than yarn so npx will pick it up
      - run: npm install --global shx@0.2.2
      - run: make setup-py-libs
      - run: make -C api docs

  test-js:
    name: Run JavaScript unit tests
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - run: make setup-js
      - run: make test-js
      - uses: codecov/codecov-action@v1

  e2e-js:
    name: Run JavaScript end-to-end tests
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - run: make setup-js
      - run: make test-e2e

  check-js:
    name: Run JavaScript lints and checks
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - run: make setup-js
      - run: make lint-js
      - run: make format
      - run: make circular-dependencies-js
      - run: make lint-css
      - run: make check-js

  build-js:
    name: Build JavaScript browser apps
    needs: [test-js, e2e-js, check-js]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - run: make setup-js
      - name: Build Components Library style guide
        run: make -C components
      - name: Build Protocol Designer
        env:
          OT_PD_COMMIT_HASH: ${{ github.SHA }}
          OT_PD_FULLSTORY_ORG: ${{ secrets.OT_PD_FULLSTORY_ORG }}
        run: make -C protocol-designer
      - name: Build Labware Library
        run: make -C labware-library

  build-app:
    name: Build desktop Opentrons App on ${{ matrix.os }}
    needs: [test-js, e2e-js, check-js]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15, windows-2019]
    env:
      OT_BUILD: ${{ github.run_number }}
      OT_APP_MIXPANEL_ID: ${{ secrets.OT_APP_MIXPANEL_ID }}
      OT_APP_INTERCOM_ID: ${{ secrets.OT_APP_INTERCOM_ID }}
    steps:
      - name: Set branch and tag name environment variables
        uses: actions/github-script@v2
        with:
          script: |
            const branch = context.ref.replace(/^refs\/(?:tags|heads)\//, '')
            const tag = context.ref.startsWith('refs/tags/') ? branch : ''
            core.exportVariable('OT_BRANCH', branch)
            core.exportVariable('OT_TAG', tag)
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - run: make setup-js
      - name: Build app for Linux
        if: ${{ runner.os == 'Linux' }}
        run: make -C app-shell dist-linux
      - name: Build app for macOS
        if: ${{ runner.os == 'macOS' }}
        run: make -C app-shell dist-osx
      - name: Build app for Windows
        if: ${{ runner.os == 'Windows' }}
        run: make -C app-shell dist-win
      - name: Deploy app files to S3
        if: ${{ github.event_name == 'push' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-2
        run: aws s3 sync --acl public-read app-shell/dist/publish s3://sandbox.app-releases.opentrons.com/${OT_BRANCH}
