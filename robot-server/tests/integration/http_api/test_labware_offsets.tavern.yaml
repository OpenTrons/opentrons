test_name: Test /labwareOffsets CRUD operations.

marks:
  - usefixtures:
      - ot3_server_base_url

stages:
  - name: Add a labware offset and check the response
    request:
      url: '{ot3_server_base_url}/labwareOffsets'
      method: POST
      json:
        data:
          definitionUri: definitionUri1
          location:
            slotName: A1
            definitionUri: testNamespace/testLoadName/123
            moduleModel: thermocyclerModuleV2
          vector: { x: 1, y: 1, z: 1 }
    response:
      status_code: 201
      json:
        data:
          id: !anystr
          createdAt: !anystr
          definitionUri: definitionUri1
          location:
            slotName: A1
            definitionUri: testNamespace/testLoadName/123
            moduleModel: thermocyclerModuleV2
          vector: { x: 1, y: 1, z: 1 }
      save:
        json:
          offset_1_data: data
          offset_1_id: data.id

  - name: Add another labware offset to add more testing data
    request:
      url: '{ot3_server_base_url}/labwareOffsets'
      method: POST
      json:
        data:
          definitionUri: definitionUri2
          location:
            slotName: A2
          vector: { x: 2, y: 2, z: 2 }
    response:
      status_code: 201
      save:
        json:
          offset_2_data: data

  - name: Add another labware offset to add more testing data
    request:
      url: '{ot3_server_base_url}/labwareOffsets'
      method: POST
      json:
        data:
          definitionUri: definitionUri3
          location:
            slotName: A3
          vector: { x: 3, y: 3, z: 3 }
    response:
      status_code: 201
      save:
        json:
          offset_3_data: data

  - name: Test getting all labware offsets
    request:
      url: '{ot3_server_base_url}/labwareOffsets'
      method: GET
    response:
      json:
        data:
          - !force_format_include '{offset_1_data}'
          - !force_format_include '{offset_2_data}'
          - !force_format_include '{offset_3_data}'
        meta:
          cursor: 0
          totalLength: 3

  # Just a basic test here. More complicated tests for the filters belong in the unit tests.
  - name: Test getting labware offsets with a filter
    request:
      url: '{ot3_server_base_url}/labwareOffsets?locationSlotName=A2'
      method: GET
    response:
      json:
        data:
          - !force_format_include '{offset_2_data}'
        meta:
          cursor: 0
          totalLength: 1

  - name: Delete a labware offset
    request:
      url: '{ot3_server_base_url}/labwareOffsets/{offset_1_id}'
      method: DELETE
    response:
      json:
        data: !force_format_include '{offset_1_data}'

  - name: Make sure it got deleted
    request:
      url: '{ot3_server_base_url}/labwareOffsets'
    response:
      json:
        data:
          - !force_format_include '{offset_2_data}'
          - !force_format_include '{offset_3_data}'
        meta:
          cursor: 0
          totalLength: 2

  - name: Delete all labware offsets
    request:
      url: '{ot3_server_base_url}/labwareOffsets'
      method: DELETE
    response:
      json: {}

  - name: Make sure they all got deleted
    request:
      url: '{ot3_server_base_url}/labwareOffsets'
    response:
      json:
        data: []
        meta:
          cursor: 0
          totalLength: 0

---
# Some of the filter query parameters can have `null` values or be omitted,
# with different semantics between the two. That distinction takes a bit of care to
# preserve across our code, so here we test it specifically.
test_name: Test null vs. omitted filter query parameters
marks:
  - usefixtures:
      - ot3_server_base_url
stages:
  - name: POST test offset 1
    request:
      method: POST
      url: '{ot3_server_base_url}/labwareOffsets'
      json:
        data:
          definitionUri: testNamespace/loadName1/1
          location:
            slotName: A1
            # No moduleModel
            # No definitionUri
          vector:
            x: 1
            y: 2
            z: 3
    response:
      status_code: 201
      save:
        json:
          offset_1_data: data
  - name: POST test offset 2
    request:
      method: POST
      url: '{ot3_server_base_url}/labwareOffsets'
      json:
        data:
          definitionUri: testNamespace/loadName2/1
          location:
            slotName: A1
            moduleModel: temperatureModuleV2
            # No definitionUri
          vector:
            x: 1
            y: 2
            z: 3
    response:
      status_code: 201
      save:
        json:
          offset_2_data: data
  - name: POST test offset 3
    request:
      method: POST
      url: '{ot3_server_base_url}/labwareOffsets'
      json:
        data:
          definitionUri: testNamespace/loadName2/1
          location:
            slotName: A1
            # no moduleModel
            definitionUri: testNamespace/adapterLoadName/1
          vector:
            x: 1
            y: 2
            z: 3
    response:
      status_code: 201
      save:
        json:
          offset_3_data: data
  - name: POST test offset 4
    request:
      method: POST
      url: '{ot3_server_base_url}/labwareOffsets'
      json:
        data:
          definitionUri: testNamespace/loadName3/1
          location:
            slotName: A1
            moduleModel: temperatureModuleV2
            definitionUri: testNamespace/adapterLoadName/1
          vector:
            x: 1
            y: 2
            z: 3
    response:
      status_code: 201
      save:
        json:
          offset_4_data: data
  - name: Test no filters
    request:
      url: '{ot3_server_base_url}/labwareOffsets'
    response:
      json:
        data:
          - !force_format_include '{offset_1_data}'
          - !force_format_include '{offset_2_data}'
          - !force_format_include '{offset_3_data}'
          - !force_format_include '{offset_4_data}'
        meta: !anydict
  - name: Test filtering on locationModuleModel=null
    request:
      url: '{ot3_server_base_url}/labwareOffsets?locationModuleModel=null'
    response:
      json:
        data:
          - !force_format_include '{offset_1_data}'
          - !force_format_include '{offset_3_data}'
        meta: !anydict
  - name: Test filtering on locationDefinitionUri=null
    request:
      url: '{ot3_server_base_url}/labwareOffsets?locationDefinitionUri=null'
    response:
      json:
        data:
          - !force_format_include '{offset_1_data}'
          - !force_format_include '{offset_2_data}'
        meta: !anydict
