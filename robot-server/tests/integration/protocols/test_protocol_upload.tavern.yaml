---
test_name: Basic Transfer Upload
marks:
  - usefixtures:
      - run_server
stages:
  - name: Upload basic_transfer_standalone protocol
    request:
      url: "{host:s}:{port:d}/protocols"
      method: POST
      files:
        protocolFile: "tests/integration/protocols/basic_transfer_standalone.py"
    response:
      status_code: 201
      json:
        data: &response_data
          id: basic_transfer_standalone
          protocolFile:
            basename: basic_transfer_standalone.py
          supportFiles: []
          lastModifiedAt: &dt
            !re_search "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d+\\+\\d{2}:\\d{2}$"
          createdAt: *dt
          metadata:
            author: engineer@opentrons.com
            apiLevel: "2.6"
            name: basic_transfer_standalone
          requiredEquipment:
            pipettes:
              - mount: right
                requestedAs: p300_single
                pipetteName: p300_single
                channels: 1
            labware:
              - label: corning_96_wellplate_360ul_flat
                uri: opentrons/corning_96_wellplate_360ul_flat/1
                location: 1
              - label: opentrons_96_tiprack_300ul
                uri: opentrons/opentrons_96_tiprack_300ul/1
                location: 2
              - !anydict
            modules: []
          errors: []
        links:
          self:
            href: '/protocols/basic_transfer_standalone'
          protocols:
            href: '/protocols'
          protocolById:
            href: '/protocols/{{protocolId}}'
  - name: Get the protocol
    request:
      url: "{host:s}:{port:d}/protocols/basic_transfer_standalone"
      method: GET
    response:
      status_code: 200
      json:
        data: *response_data
        links:
          self:
            href: '/protocols/basic_transfer_standalone'
          protocols:
            href: '/protocols'
          protocolById:
            href: '/protocols/{{protocolId}}'
  - name: Delete the protocol
    request:
      url: "{host:s}:{port:d}/protocols/basic_transfer_standalone"
      method: DELETE
    response:
      status_code: 200
      json:
        data: *response_data
        links:
          self:
            href: '/protocols'
          protocolById:
            href: '/protocols/{{protocolId}}'
  - name: Get all protocols to verify that there are none
    request:
      url: "{host:s}:{port:d}/protocols"
      method: GET
    response:
      status_code: 200
      json:
        data: []
        links:
          self:
             href: '/protocols'
          protocolById:
            href: '/protocols/{{protocolId}}'
---
test_name: Basic Transfer With Config
marks:
  - usefixtures:
      - run_server
stages:
  - name: Upload just the protocol file.
    request:
      url: "{host:s}:{port:d}/protocols"
      method: POST
      files:
        protocolFile: "tests/integration/protocols/basic_transfer_with_config.py"
    response:
      status_code: 201
      json:
        data:
          id: basic_transfer_with_config
          protocolFile:
            basename: basic_transfer_with_config.py
          supportFiles: []
          lastModifiedAt: *dt
          createdAt: *dt
          metadata:
            author: null
            apiLevel: "2.6"
            name: null
          requiredEquipment:
            pipettes: []
            labware: []
            modules: []
          errors:
            - type: ModuleNotFoundError
              description: No module named 'helpers'
        links:
          self:
            href: '/protocols/basic_transfer_with_config'
          protocols:
            href: '/protocols'
          protocolById:
            href: '/protocols/{{protocolId}}'
  - name: Upload the missing helpers.py file
    request:
      url: "{host:s}:{port:d}/protocols/basic_transfer_with_config"
      method: PATCH
      files:
        file: "tests/integration/protocols/helpers.py"
    response:
      status_code: 200
      json:
        data:
          id: basic_transfer_with_config
          protocolFile:
            basename: basic_transfer_with_config.py
          supportFiles:
            - basename: helpers.py
          lastModifiedAt: *dt
          createdAt: *dt
          metadata:
            author: null
            apiLevel: "2.6"
            name: null
          requiredEquipment:
            pipettes: [ ]
            labware: [ ]
            modules: [ ]
          errors:
            - type: ExceptionInProtocolError
              description: "[Errno 2] No such file or directory: 'basic_transfer_config.json'"
              lineNumber: 8
        links:
          self:
            href: '/protocols/basic_transfer_with_config'
          protocols:
            href: '/protocols'
          protocolById:
            href: '/protocols/{{protocolId}}'
  - name: Upload the missing basic_transfer_config.json file
    request:
      url: "{host:s}:{port:d}/protocols/basic_transfer_with_config"
      method: PATCH
      files:
        file: "tests/integration/protocols/basic_transfer_config.json"
    response:
      status_code: 200
      json:
        data: &basic_transfer_with_config_response
          id: basic_transfer_with_config
          protocolFile:
            basename: basic_transfer_with_config.py
          supportFiles:
            - basename: helpers.py
            - basename: basic_transfer_config.json
          lastModifiedAt: *dt
          createdAt: *dt
          metadata:
            author: null
            apiLevel: "2.6"
            name: null
          requiredEquipment:
            pipettes:
              - mount: right
                requestedAs: p300_single
                pipetteName: p300_single
                channels: 1
            labware:
              - label: corning_96_wellplate_360ul_flat
                uri: opentrons/corning_96_wellplate_360ul_flat/1
                location: 1
              - label: opentrons_96_tiprack_300ul
                uri: opentrons/opentrons_96_tiprack_300ul/1
                location: 2
              - !anydict
            modules: [ ]
          errors: []
        links:
          self:
            href: '/protocols/basic_transfer_with_config'
          protocols:
            href: '/protocols'
          protocolById:
            href: '/protocols/{{protocolId}}'
  - name: Delete the protocol
    request:
      url: "{host:s}:{port:d}/protocols/basic_transfer_with_config"
      method: DELETE
    response:
      status_code: 200
      json:
        data: *basic_transfer_with_config_response
        links:
          self:
            href: '/protocols'
          protocolById:
            href: '/protocols/{{protocolId}}'
