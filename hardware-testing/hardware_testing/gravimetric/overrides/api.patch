diff --git a/api/src/opentrons/protocol_api/core/legacy/deck.py b/api/src/opentrons/protocol_api/core/legacy/deck.py
index 54bca33742..e6b49e47fe 100644
--- a/api/src/opentrons/protocol_api/core/legacy/deck.py
+++ b/api/src/opentrons/protocol_api/core/legacy/deck.py
@@ -47,11 +47,11 @@ class DeckItem(Protocol):
 class Deck(UserDict):  # type: ignore[type-arg]
     data: Dict[int, Optional[DeckItem]]
 
-    def __init__(self, deck_type: str) -> None:
+    def __init__(
+        self, deck_type: str, version: int = DEFAULT_DECK_DEFINITION_VERSION
+    ) -> None:
         super().__init__()
-        self._definition = load_deck(
-            name=deck_type, version=DEFAULT_DECK_DEFINITION_VERSION
-        )
+        self._definition = load_deck(name=deck_type, version=version)
         self._positions = {}
         for slot in self._definition["locations"]["orderedSlots"]:
             self.data[int(slot["id"])] = None
diff --git a/api/src/opentrons/protocol_api/create_protocol_context.py b/api/src/opentrons/protocol_api/create_protocol_context.py
index f2d8e492ec..dd4fd9102e 100644
--- a/api/src/opentrons/protocol_api/create_protocol_context.py
+++ b/api/src/opentrons/protocol_api/create_protocol_context.py
@@ -22,6 +22,7 @@ from .deck import Deck
 
 from .core.common import ProtocolCore as AbstractProtocolCore
 from .core.legacy.deck import Deck as LegacyDeck
+from opentrons_shared_data.deck import DEFAULT_DECK_DEFINITION_VERSION
 from .core.legacy.legacy_protocol_core import LegacyProtocolCore
 from .core.legacy.labware_offset_provider import (
     AbstractLabwareOffsetProvider,
@@ -52,6 +53,7 @@ def create_protocol_context(
     extra_labware: Optional[Dict[str, LabwareDefinition]] = None,
     bundled_labware: Optional[Dict[str, LabwareDefinition]] = None,
     bundled_data: Optional[Dict[str, bytes]] = None,
+    deck_version: int = DEFAULT_DECK_DEFINITION_VERSION,
 ) -> ProtocolContext:
     """Create a ProtocolContext for use in a Python protocol.
 
@@ -121,7 +123,7 @@ def create_protocol_context(
 
     # TODO(mc, 2022-8-22): remove `disable_fast_protocol_upload`
     elif use_simulating_core and not feature_flags.disable_fast_protocol_upload():
-        legacy_deck = LegacyDeck(deck_type=deck_type)
+        legacy_deck = LegacyDeck(deck_type=deck_type, version=deck_version)
         core = LegacyProtocolCoreSimulator(
             sync_hardware=sync_hardware,
             labware_offset_provider=labware_offset_provider,
@@ -133,7 +135,7 @@ def create_protocol_context(
         )
 
     else:
-        legacy_deck = LegacyDeck(deck_type=deck_type)
+        legacy_deck = LegacyDeck(deck_type=deck_type, version=deck_version)
         core = LegacyProtocolCore(
             sync_hardware=sync_hardware,
             labware_offset_provider=labware_offset_provider,
