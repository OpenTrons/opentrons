/**
 * Flowtype definitions for ListItem
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.13.0
 * @flow
 */

import * as React from "react";
import type { IconName } from "../icons";
declare type ListItemProps = {|
  /**
   * click handler
   */
  onClick?: (event: React.SyntheticEvent<>) => mixed,

  /**
   * mouse enter handler
   */
  onMouseEnter?: (event: React.MouseEvent<>) => mixed,

  /**
   * mouse leave handler
   */
  onMouseLeave?: (event: React.MouseEvent<>) => mixed,

  /**
   * mouse enter handler
   */
  onPointerEnter?: (event: React.PointerEvent<>) => mixed,

  /**
   * mouse leave handler
   */
  onPointerLeave?: (event: React.PointerEvent<>) => mixed,

  /**
   * if URL is specified, ListItem is wrapped in a React Router NavLink
   */
  url?: string | null,

  /**
   * if URL is specified NavLink can receive an active class name
   */
  activeClassName?: string,

  /**
   * if URL is specified NavLink can receive an exact property for matching routes
   */
  exact?: boolean,

  /**
   * Additional class name
   */
  className?: string,

  /**
   * if disabled, the onClick handler will be disabled
   */
  isDisabled?: boolean,

  /**
   * name constant of the icon to display
   */
  iconName?: IconName,
  "aria-describedby"?: string,
  ref?:
    | {
        current: Element | null,
      }
    | ((current: Element | null) => mixed),
  children?: React.Node,
|};

/**
 * A styled `<li>` with an optional icon, and an optional url for a React Router `NavLink`
 */
declare export var ListItem: React.ForwardRefExoticComponent<
  Pick<
    ListItemProps,
    | "exact"
    | "children"
    | "url"
    | "className"
    | "aria-describedby"
    | "onClick"
    | "onMouseEnter"
    | "onMouseLeave"
    | "onPointerEnter"
    | "onPointerLeave"
    | "iconName"
    | "isDisabled"
    | "activeClassName"
  > &
    React.RefAttributes<HTMLLIElement>
>;
declare export {};
