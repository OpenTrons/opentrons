/**
 * Flowtype definitions for useHover
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.13.0
 * @flow
 */

export type UseHoverOptions = {|
  enterDelay?: number,
  leaveDelay?: number,
|};
export type HoverHandlers = {|
  onPointerEnter: () => mixed,
  onPointerLeave: () => mixed,
|};
export type UseHoverResult = [boolean, HoverHandlers];
/**
 * Hook to track hover state of an element
 * @param {UseHoverOptions} [options] (add an `enterDelay` or `leaveDelay` to the hover state change)
 * @returns {UseHoverResult}
 * @example ```js
 * import { useHover } from '@opentrons/components'
 *
 * export function HoverComponent() {
 *   const [hovered, hoverHandlers] = useHover({
 *     enterDelay: 300,
 *     leaveDelay: 100
 *   })
 *
 *   return (
 *     <span {...hoverHandlers}>
 *       {hovered ? 'Hovered!' : 'Not hovered!'}
 *     </span>
 *   )
 * }
 * ```
 */
declare export function useHover(options?: UseHoverOptions): UseHoverResult;
