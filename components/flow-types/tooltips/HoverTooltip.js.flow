/**
 * Flowtype definitions for HoverTooltip
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.13.0
 * @flow
 */

import * as React from "react";
import type { DeprecatedTooltipProps } from "./DeprecatedTooltip";
declare type MouseHandlers = {|
  onMouseEnter: () => void,
  onMouseLeave: () => void,
|};
export type HoverTooltipHandlers = React.PropsWithRef<MouseHandlers>;
export type HoverTooltipProps = DeprecatedTooltipProps;
declare type HoverTooltipState = {|
  isOpen: boolean,
|};

/**
 * Tooltip component that triggers on `MouseEnter` and `MouseLeave`. See
 * `Tooltip` for full props list.
 *
 * `props.children` is a function that receives the following props object:
 * ```js
 * type HoverTooltipHandlers = {
 *   ref: React.Ref<*>,
 *   onMouseEnter: (React.MouseEvent) => void,
 *   onMouseLeave: (React.MouseEvent) => void,
 * }
 * ```
 * @deprecated Use `Tooltip` and `useHoverTooltip` instead
 */
declare export class HoverTooltip
  mixins React.Component<HoverTooltipProps, HoverTooltipState> {
  openTimeout: number | null;
  closeTimeout: number | null;
  constructor(props: HoverTooltipProps): this;
  componentWillUnmount(): void;
  delayedOpen: () => void;
  delayedClose: () => void;
  render(): React$Node;
}
declare export {};
