/**
 * Flowtype definitions for DropdownField
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.13.0
 * @flow
 */

import * as React from "react";
export type DropdownOption = {|
  name: string,
  value: string,
  disabled?: boolean,
|};
export type Options = DropdownOption[];
export type DropdownFieldProps = {|
  /**
   * change handler
   */
  onChange: React.ChangeEventHandler<HTMLSelectElement>,

  /**
   * focus handler
   */
  onFocus?: React.FocusEventHandler<>,

  /**
   * blur handler
   */
  onBlur?: React.FocusEventHandler<>,

  /**
   * value that is selected
   */
  value?: string | null | void,

  /**
   * optional id for the <select> element
   */
  id?: string,

  /**
   * name of field in form
   */
  name?: string,

  /**
   * Array of {name, value} data
   */
  options: Options,

  /**
   * classes to apply
   */
  className?: string,

  /**
   * optional caption. hidden when `error` is given
   */
  caption?: string,

  /**
   * if included, DropdownField will use error style and display error instead of caption
   */
  error?: string | null | void,

  /**
   * dropdown is disabled if value is true
   */
  disabled?: boolean,

  /**
   * html tabindex property
   */
  tabIndex?: number,

  /**
   * automatically focus field on render
   */
  autoFocus?: boolean,

  /**
   * if true, render indeterminate unselectable option
   */
  isIndeterminate?: boolean,
|};
declare export function DropdownField(props: DropdownFieldProps): React$Node;
