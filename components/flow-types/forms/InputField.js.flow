/**
 * Flowtype definitions for InputField
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.13.0
 * @flow
 */

import * as React from "react";
declare export var INPUT_TYPE_TEXT: "text";
declare export var INPUT_TYPE_PASSWORD: "password";
export type InputFieldProps = {|
  /**
   * field is disabled if value is true
   */
  disabled?: boolean,

  /**
   * change handler
   */
  onChange?: (event: React.SyntheticEvent<HTMLInputElement>) => mixed,

  /**
   * classes to apply to outer element
   */
  className?: string,

  /**
   * inline label text. DEPRECATED
   */
  label?: string,

  /**
   * classes to apply to inner label text div
   */
  labelTextClassName?: string | null | void,

  /**
   * name of field in form
   */
  name?: string,

  /**
   * optional ID of <input> element
   */
  id?: string,

  /**
   * placeholder text
   */
  placeholder?: string,

  /**
   * optional suffix component, appears to the right of input text
   */
  units?: React.Node,

  /**
   * current value of text in box, defaults to ''
   */
  value?: string | null | void,

  /**
   * if included, InputField will use error style and display error instead of caption
   */
  error?: string | null | void,

  /**
   * optional caption. hidden when `error` is given
   */
  caption?: string | null | void,

  /**
   * appears to the right of the caption. Used for character limits, eg '0/45'
   */
  secondaryCaption?: string | null | void,

  /**
   * optional input type (default "text")
   */
  type?: typeof INPUT_TYPE_TEXT | typeof INPUT_TYPE_PASSWORD,

  /**
   * mouse click handler
   */
  onClick?: (event: React.MouseEvent<HTMLInputElement>) => mixed,

  /**
   * focus handler
   */
  onFocus?: (event: React.FocusEvent<HTMLInputElement>) => mixed,

  /**
   * blur handler
   */
  onBlur?: (event: React.FocusEvent<HTMLInputElement>) => mixed,

  /**
   * makes input field read-only
   */
  readOnly?: boolean | void,

  /**
   * html tabindex property
   */
  tabIndex?: number,

  /**
   * automatically focus field on render
   */
  autoFocus?: boolean,

  /**
   * if true, clear out value and add '-' placeholder
   */
  isIndeterminate?: boolean,
|};
declare export function InputField(props: InputFieldProps): React$Node;
