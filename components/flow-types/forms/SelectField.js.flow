/**
 * Flowtype definitions for SelectField
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.13.0
 * @flow
 */

import * as React from "react";
import type { SelectProps } from "./Select";
export type SelectFieldProps = {|
  /**
   * optional HTML id for container
   */
  id?: $PropertyType<SelectProps, "id">,

  /**
   * field name
   */
  name: $NonMaybeType<$PropertyType<SelectProps, "name">>,

  /**
   * react-Select option, usually label, value
   */
  options: $NonMaybeType<$PropertyType<SelectProps, "options">>,

  /**
   * currently selected value
   */
  value: string | null | void,

  /**
   * disable the select
   */
  disabled?: $PropertyType<SelectProps, "isDisabled">,

  /**
   * optional placeholder
   */
  placeholder?: $PropertyType<SelectProps, "placeholder">,

  /**
   * menuPosition prop to send to react-select
   */
  menuPosition?: $PropertyType<SelectProps, "menuPosition">,

  /**
   * render function for the option label passed to react-select
   */
  formatOptionLabel?: $PropertyType<SelectProps, "formatOptionLabel">,

  /**
   * optional className
   */
  className?: string,

  /**
   * optional caption. hidden when `error` is given
   */
  caption?: React.Node,

  /**
   * if included, use error style and display error instead of caption
   */
  error?: string | null | void,

  /**
   * change handler called with (name, value)
   */
  onValueChange?: (name: string, value: string) => mixed,

  /**
   * blur handler called with (name)
   */
  onLoseFocus?: (name: string) => mixed,
|};
declare export function SelectField(props: SelectFieldProps): React$Node;
