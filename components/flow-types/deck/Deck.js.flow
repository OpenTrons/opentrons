/**
 * Flowtype definitions for Deck
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.13.0
 * @flow
 */

import * as React from "react";
import type { DeckDefinition, DeckSlotId } from "@opentrons/shared-data";
export type LabwareComponentProps = {|
  slot: DeckSlotId,
  width: number,
  height: number,
|};
export type LabwareComponentType = React.ComponentType<LabwareComponentProps>;
export type DeckProps = {|
  className?: string,
  LabwareComponent?: LabwareComponentType,
  DragPreviewLayer?: React.ReactPortal,
|};

/**
 * @deprecated Use {@link RobotWorkSpace}
 */
declare export class Deck mixins React.Component<DeckProps> {
  parentRef: Element | null | void;
  getXY: (
    rawX: number,
    rawY: number
  ) => {
    scaledX?: number,
    scaledY?: number,
  };
  render(): React$Node;
}
export type DeckFromDataProps = {|
  def: DeckDefinition,
  layerBlocklist: string[],
|};
declare export function DeckFromData(props: DeckFromDataProps): React$Node;
