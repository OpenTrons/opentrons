image: Visual Studio 2015

environment:
  BASH: C:\cygwin64\bin\bash
  PYTHON: c:\Python35 # No trailing backslash
  CYG_PYTHON_PATH: /cygdrive/c/Python35:/cygdrive/c/Python35/Scripts # Need to override /usr/bin

platform: x64

cache:
  - '%APPDATA%\npm-cache'   # npm cache

init:
  - set PATH=%PYTHON%;%PYTHON%\Scripts;%PATH% # Activate Python 3.5
  - git config --global core.autocrlf false # don't convert LFs to CRLFs since we are running Cygwin
  # Start RDP server to watch the build
  # https://www.appveyor.com/docs/how-to/rdp-to-build-worker/
  # - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

# Keep RDP server to see at what happened if the build got stuck
# Uncomment this to debug a stuck build through RDP:
# https://www.appveyor.com/docs/how-to/rdp-to-build-worker/
# on_finish:
#   - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

install:
  # read node version from the first line of .nvmrc
  - ps: $env:nodejs_version = (Get-Content -Path $env:APPVEYOR_BUILD_FOLDER\.nvmrc)[0]
  - ps: Install-Product node $env:nodejs_version x64
  # upgrade to npm v5.6.0 and verify npm cache to work around weird npm issues
  # https://github.com/npm/npm/releases/tag/v5.6.0
  - ps: npm install -g npm@5.6.0
  - ps: npm cache verify
  # install dev dependencies
  - '%BASH% -lc "export PATH=$CYG_PYTHON_PATH:$PATH && cd $APPVEYOR_BUILD_FOLDER && make install"'

build: false # No need to run MSBuild

# do not run automatic test discovery
test: off

build_script:
  - '%BASH% -lc "export PATH=$CYG_PYTHON_PATH:$PATH && cd $APPVEYOR_BUILD_FOLDER/api && make test"'
  # Note: we are not running test-e2e on Windows due to problems with ChromeDriver
  - '%BASH% -lc "cd $APPVEYOR_BUILD_FOLDER && source scripts/env-vars-appveyor && make -C app package test && make -C app dist-win"'
  - >
    %BASH% -lc "cd $APPVEYOR_BUILD_FOLDER/app/dist/win && ls -la . && find ./** ! -name 'opentrons-v*' -exec rm -rf {} + && ls -la ."

before_deploy:
  - ps: Get-ChildItem .\app\dist\win | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name -DeploymentName OTAppWin}

deploy:
  - provider: S3
    access_key_id: $(AWS_ACCESS_KEY)
    secret_access_key: $(AWS_SECRET_KEY)
    bucket: ot-app-builds
    set_public: true
    folder: ci-builds
    artifact: OTAppWin
