{
  "commandAnnotations": [],
  "commands": [
    {
      "commandType": "home",
      "completedAt": "TIMESTAMP",
      "createdAt": "TIMESTAMP",
      "id": "UUID",
      "key": "50c7ae73a4e3f7129874f39dfb514803",
      "notes": [],
      "params": {},
      "result": {},
      "startedAt": "TIMESTAMP",
      "status": "succeeded"
    }
  ],
  "config": {
    "protocolType": "json",
    "schemaVersion": 4
  },
  "createdAt": "TIMESTAMP",
  "errors": [
    {
      "createdAt": "TIMESTAMP",
      "detail": "Can't instantiate abstract class LegacyInstrumentCoreSimulator with abstract methods evotip_dispense, evotip_seal, evotip_unseal",
      "errorCode": "4000",
      "errorInfo": {},
      "errorType": "UnexpectedProtocolError",
      "id": "UUID",
      "isDefined": false,
      "wrappedErrors": [
        {
          "createdAt": "TIMESTAMP",
          "detail": "TypeError: Can't instantiate abstract class LegacyInstrumentCoreSimulator with abstract methods evotip_dispense, evotip_seal, evotip_unseal",
          "errorCode": "4000",
          "errorInfo": {
            "args": "(\"Can't instantiate abstract class LegacyInstrumentCoreSimulator with abstract methods evotip_dispense, evotip_seal, evotip_unseal\",)",
            "class": "TypeError",
            "traceback": "  File \"/usr/local/lib/python3.10/site-packages/opentrons/protocol_runner/task_queue.py\", line N, in _run\n    await self._run_func()\n\n  File \"/usr/local/lib/python3.10/site-packages/opentrons/protocol_runner/task_queue.py\", line N, in _do_run\n    await func(*args, **kwargs)\n\n  File \"/usr/local/lib/python3.10/site-packages/opentrons/protocol_runner/protocol_runner.py\", line N, in run_func\n    await self._protocol_executor.execute(\n\n  File \"/usr/local/lib/python3.10/site-packages/opentrons/protocol_runner/python_protocol_wrappers.py\", line N, in execute\n    await to_thread.run_sync(\n\n  File \"/usr/local/lib/python3.10/site-packages/anyio/to_thread.py\", line N, in run_sync\n    return await get_asynclib().run_sync_in_worker_thread(\n\n  File \"/usr/local/lib/python3.10/site-packages/anyio/_backends/_asyncio.py\", line N, in run_sync_in_worker_thread\n    return await future\n\n  File \"/usr/local/lib/python3.10/site-packages/anyio/_backends/_asyncio.py\", line N, in run\n    result = context.run(func, *args)\n\n  File \"/usr/local/lib/python3.10/site-packages/opentrons/protocols/execution/execute.py\", line N, in run_protocol\n    ins = execute_json_v3.load_pipettes_from_json(context, protocol.contents)\n\n  File \"/usr/local/lib/python3.10/site-packages/opentrons/protocols/execution/execute_json_v3.py\", line N, in load_pipettes_from_json\n    instr = ctx.load_instrument(name, mount)\n\n  File \"/usr/local/lib/python3.10/site-packages/opentrons/protocols/api_support/util.py\", line N, in _check_version_wrapper\n    return decorated_obj(*args, **kwargs)\n\n  File \"/usr/local/lib/python3.10/site-packages/opentrons/protocol_api/protocol_context.py\", line N, in load_instrument\n    instrument_core = self._core.load_instrument(\n\n  File \"/usr/local/lib/python3.10/site-packages/opentrons/protocol_api/core/legacy_simulator/legacy_protocol_core.py\", line N, in load_instrument\n    new_instr = LegacyInstrumentCoreSimulator(\n"
          },
          "errorType": "PythonException",
          "id": "UUID",
          "isDefined": false,
          "wrappedErrors": []
        }
      ]
    }
  ],
  "files": [
    {
      "name": "OT2_X_v4_P300M_P20S_MM_TC1_TM_e2eTests.json",
      "role": "main"
    }
  ],
  "labware": [
    {
      "definitionUri": "opentrons/opentrons_1_trash_1100ml_fixed/1",
      "id": "UUID",
      "loadName": "opentrons_1_trash_1100ml_fixed",
      "location": {
        "slotName": "12"
      }
    }
  ],
  "liquidClasses": [],
  "liquids": [],
  "metadata": {
    "author": "NN MM",
    "category": null,
    "created": "TIMESTAMP",
    "description": "Protocol for e2e tests",
    "lastModified": "TIMESTAMP",
    "protocolName": "script_pur_sample_1",
    "subcategory": null,
    "tags": []
  },
  "modules": [],
  "pipettes": [],
  "result": "not-ok",
  "robotType": "OT-2 Standard",
  "runTimeParameters": []
}
