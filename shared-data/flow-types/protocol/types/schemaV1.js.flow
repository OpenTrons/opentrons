/**
 * Flowtype definitions for schemaV1
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.13.0
 * @flow
 */

import type { DeckSlotId, PipetteMount as Mount } from "../../js/types";
export type PipetteLabwareFields = {|
  pipette: string,
  labware: string,
  well: string,
|};
export type AspirateDispenseArgs = {|
  ...$Exact<PipetteLabwareFields>,

  volume: number,
  offsetFromBottomMm?: number | null | void,
  "flow-rate"?: number | null | void,
|};
export type Command =
  | {
      command: "aspirate" | "dispense",
      params: AspirateDispenseArgs,
    }
  | {
      command: "pick-up-tip" | "drop-tip" | "blowout",
      params: PipetteLabwareFields,
    }
  | {
      command: "touch-tip",
      params: PipetteLabwareFields & {
        offsetFromBottomMm?: number | null | void,
      },
    }
  | {
      command: "delay",

      /**
       * number of seconds to delay (fractional values OK),
       * or `true` for delay until user input
       */
      params: {
        wait: number | true,
        message: string | null | void,
      },
    }
  | {
      command: "air-gap",
      params: {
        pipette: string,
        volume: number,
      },
    };
declare type VersionString = string;
declare type PipetteModel = string;
declare type PipetteName = string;
export type FilePipette = {|
  mount: Mount,
  model: PipetteModel,
  name?: PipetteName,
|};
export type FileLabware = {|
  slot: DeckSlotId,
  model: string,
  "display-name"?: string,
|};
declare type FlowRateForPipettes = { [key: PipetteModel]: number };
export type ProtocolFile<DesignerApplicationData> = {|
  "protocol-schema": VersionString,
  metadata: {
    "protocol-name"?: string,
    author?: string,
    description?: string,
    created?: number,
    "last-modified"?: number | null,
    category?: string | null,
    subcategory?: string | null,
    tags?: string[],
  },
  "default-values": {
    "aspirate-flow-rate": FlowRateForPipettes,
    "dispense-flow-rate": FlowRateForPipettes,
    "aspirate-mm-from-bottom": number,
    "dispense-mm-from-bottom": number,
    "touch-tip-mm-from-top"?: number,
  },
  "designer-application": {
    "application-name": string,
    "application-version": string | null | void,
    data: DesignerApplicationData,
  },
  robot: {
    model: "OT-2 Standard",
  },
  pipettes: { [key: string]: FilePipette },
  labware: { [key: string]: FileLabware },
  procedure: Array<{
    annotation: {
      name: string,
      description: string,
    },
    subprocedure: Command[],
  }>,
|};
declare export {};
