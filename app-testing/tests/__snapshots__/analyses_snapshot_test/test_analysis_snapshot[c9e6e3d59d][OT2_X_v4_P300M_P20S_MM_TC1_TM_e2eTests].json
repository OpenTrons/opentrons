{
  "commands": [
    {
      "commandType": "home",
      "notes": [],
      "params": {},
      "result": {},
      "status": "succeeded"
    }
  ],
  "config": {
    "protocolType": "json",
    "schemaVersion": 4
  },
  "errors": [
    {
      "detail": "1 validation error for PipetteConfigurations\nlldSettings\n  field required (type=value_error.missing)",
      "errorCode": "4000",
      "errorInfo": {},
      "errorType": "UnexpectedProtocolError",
      "isDefined": false,
      "wrappedErrors": [
        {
          "detail": "pydantic.error_wrappers.ValidationError: 1 validation error for PipetteConfigurations\nlldSettings\n  field required (type=value_error.missing)",
          "errorCode": "4000",
          "errorInfo": {
            "args": "([ErrorWrapper(exc=MissingError(), loc=('lldSettings',))], <class 'opentrons_shared_data.pipette.pipette_definition.PipetteConfigurations'>)",
            "class": "ValidationError",
            "model": "<class 'opentrons_shared_data.pipette.pipette_definition.PipetteConfigurations'>",
            "raw_errors": "[ErrorWrapper(exc=MissingError(), loc=('lldSettings',))]",
            "traceback": "  File \"/usr/local/lib/python3.10/site-packages/opentrons/protocol_runner/task_queue.py\", line 84, in _run\n    await self._run_func()\n\n  File \"/usr/local/lib/python3.10/site-packages/opentrons/protocol_runner/task_queue.py\", line 61, in _do_run\n    await func(*args, **kwargs)\n\n  File \"/usr/local/lib/python3.10/site-packages/opentrons/protocol_runner/protocol_runner.py\", line 235, in run_func\n    await self._protocol_executor.execute(\n\n  File \"/usr/local/lib/python3.10/site-packages/opentrons/protocol_runner/python_protocol_wrappers.py\", line 156, in execute\n    await to_thread.run_sync(\n\n  File \"/usr/local/lib/python3.10/site-packages/anyio/to_thread.py\", line 33, in run_sync\n    return await get_asynclib().run_sync_in_worker_thread(\n\n  File \"/usr/local/lib/python3.10/site-packages/anyio/_backends/_asyncio.py\", line 877, in run_sync_in_worker_thread\n    return await future\n\n  File \"/usr/local/lib/python3.10/site-packages/anyio/_backends/_asyncio.py\", line 807, in run\n    result = context.run(func, *args)\n\n  File \"/usr/local/lib/python3.10/site-packages/opentrons/protocols/execution/execute.py\", line 51, in run_protocol\n    ins = execute_json_v3.load_pipettes_from_json(context, protocol.contents)\n\n  File \"/usr/local/lib/python3.10/site-packages/opentrons/protocols/execution/execute_json_v3.py\", line 39, in load_pipettes_from_json\n    instr = ctx.load_instrument(name, mount)\n\n  File \"/usr/local/lib/python3.10/site-packages/opentrons/protocols/api_support/util.py\", line 383, in _check_version_wrapper\n    return decorated_obj(*args, **kwargs)\n\n  File \"/usr/local/lib/python3.10/site-packages/opentrons/protocol_api/protocol_context.py\", line 931, in load_instrument\n    instrument_core = self._core.load_instrument(\n\n  File \"/usr/local/lib/python3.10/site-packages/opentrons/protocol_api/core/legacy_simulator/legacy_protocol_core.py\", line 61, in load_instrument\n    self._sync_hardware.cache_instruments(attached)\n\n  File \"/usr/local/lib/python3.10/site-packages/opentrons/hardware_control/adapters.py\", line 64, in call_coroutine_sync\n    return fut.result()\n\n  File \"/usr/local/lib/python3.10/concurrent/futures/_base.py\", line 458, in result\n    return self.__get_result()\n\n  File \"/usr/local/lib/python3.10/concurrent/futures/_base.py\", line 403, in __get_result\n    raise self._exception\n\n  File \"/usr/local/lib/python3.10/site-packages/opentrons/hardware_control/api.py\", line 450, in cache_instruments\n    found = await self._backend.get_attached_instruments(checked_require)\n\n  File \"/usr/local/lib/python3.10/site-packages/opentrons/util/async_helpers.py\", line 68, in _wrapper\n    ret = await async_def_func(*args, **kwargs)\n\n  File \"/usr/local/lib/python3.10/site-packages/opentrons/hardware_control/backends/simulator.py\", line 326, in get_attached_instruments\n    return {\n\n  File \"/usr/local/lib/python3.10/site-packages/opentrons/hardware_control/backends/simulator.py\", line 327, in <dictcomp>\n    mount: self._attached_to_mount(mount, expected.get(mount))\n\n  File \"/usr/local/lib/python3.10/site-packages/opentrons/hardware_control/backends/simulator.py\", line 295, in _attached_to_mount\n    \"config\": mutable_configurations.load_with_mutable_configurations(\n\n  File \"/usr/local/lib/python3.10/site-packages/opentrons_shared_data/pipette/mutable_configurations.py\", line 330, in load_with_mutable_configurations\n    base_configurations = load_definition(\n\n  File \"/usr/local/lib/python3.10/site-packages/opentrons_shared_data/pipette/load_data.py\", line 254, in load_definition\n    return PipetteConfigurations.parse_obj(\n\n  File \"pydantic/main.py\", line 526, in pydantic.main.BaseModel.parse_obj\n\n  File \"pydantic/main.py\", line 341, in pydantic.main.BaseModel.__init__\n"
          },
          "errorType": "PythonException",
          "isDefined": false,
          "wrappedErrors": []
        }
      ]
    }
  ],
  "files": [
    {
      "name": "OT2_X_v4_P300M_P20S_MM_TC1_TM_e2eTests.json",
      "role": "main"
    },
    {
      "name": "cpx_4_tuberack_100ul.json",
      "role": "labware"
    },
    {
      "name": "opentrons_ot3_96_tiprack_1000ul_rss.json",
      "role": "labware"
    },
    {
      "name": "opentrons_ot3_96_tiprack_200ul_rss.json",
      "role": "labware"
    },
    {
      "name": "opentrons_ot3_96_tiprack_50ul_rss.json",
      "role": "labware"
    },
    {
      "name": "sample_labware.json",
      "role": "labware"
    }
  ],
  "labware": [
    {
      "definitionUri": "opentrons/opentrons_1_trash_1100ml_fixed/1",
      "loadName": "opentrons_1_trash_1100ml_fixed",
      "location": {
        "slotName": "12"
      }
    }
  ],
  "liquids": [],
  "metadata": {
    "author": "NN MM",
    "category": null,
    "description": "Protocol for e2e tests",
    "protocolName": "script_pur_sample_1",
    "subcategory": null,
    "tags": []
  },
  "modules": [],
  "pipettes": [],
  "result": "not-ok",
  "robotType": "OT-2 Standard",
  "runTimeParameters": []
}
